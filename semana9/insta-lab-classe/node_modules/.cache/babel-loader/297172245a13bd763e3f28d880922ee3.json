{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noh_a\\\\Desktop\\\\Labenu\\\\Noh-Ah-Jeong\\\\semana9\\\\insta-lab-classe\\\\src\\\\components\\\\Post\\\\Post.js\";\nimport React from 'react';\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles';\nimport IconeComContador from '../IconeComContador/IconeComContador';\nimport SecaoComentario from '../SecaoComentario/SecaoComentario';\nimport iconeCoracaoPreto from \"../../img/favorite.svg\";\nimport iconeCoracaoBranco from \"../../img/favorite-white.svg\";\nimport iconeComentario from \"../../img/comment_icon.svg\";\n\nclass Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      curtido: false,\n      // usado para a lógica de mudança de cor do coração e o aumento/diminuição do número de curtidas\n      numeroCurtidas: 0,\n      // número de curtidas do post. Varia entre 0 e 1. \n      comentando: false,\n      // usado para a lógica de abrir ou fechar a caixa de comentário\n      numeroComentarios: 0,\n      // número de comentários do post.\n      comentarios: [] // responsável por guardar a lista de comentários feitos no post\n\n    };\n\n    this.onClickCurtida = () => {\n      // verifica se, no estado, cutido é true ou false\n      if (this.state.curtido) {\n        // se for true, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n        this.setState({\n          curtido: !this.state.curtido,\n          numeroCurtidas: this.state.numeroCurtidas - 1\n        });\n      } else {\n        // se for false, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n        this.setState({\n          curtido: !this.state.curtido,\n          numeroCurtidas: this.state.numeroCurtidas + 1\n        });\n      }\n    };\n\n    this.onClickComentario = () => {\n      this.setState({\n        comentando: !this.state.comentando\n      });\n    };\n\n    this.enviarComentario = comentario => {\n      const listaDeComentarios = [...this.state.comentarios, comentario];\n      this.setState({\n        comentarios: listaDeComentarios,\n        comentando: false,\n        numeroComentarios: this.state.numeroComentarios + 1\n      });\n    };\n  }\n\n  render() {\n    // De acordo com a propriedade curtido do estado, o valor muda entre  iconeCoracaoPreto e o iconeCoracaoBranco, \n    // que estão sendo importados nas linhas 7 e 8, respectivamente. \n    const iconeCurtida = this.state.curtido ? iconeCoracaoPreto : iconeCoracaoBranco; // expressão condicional que, de acordo com o valor de comentando no estado, renderiza o componente\n    // SecaoComentario ou o CommentContainer. Esta expressão está sendo chamada no JSX na linha 104\n\n    const caixaDeComentario = this.state.comentando ? // Componente com o input e botão de enviar novo comentario. Import dele na linha 5.\n    React.createElement(SecaoComentario, {\n      enviarComentario: this.enviarComentario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : // Funcao map sendo feita na propriedade comentarios do estado. Ou seja, está sendo pego todos os\n    // comentários do estado para serem renderizados na tela, dentro do componente CommentContainer \n    this.state.comentarios.map(comentario => {\n      return React.createElement(CommentContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, comentario));\n    });\n    return React.createElement(PostContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PostHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(UserPhoto, {\n      src: this.props.fotoUsuario,\n      alt: 'Imagem do usuario',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.nomeUsuario)), React.createElement(PostPhoto, {\n      src: this.props.fotoPost,\n      alt: 'Imagem do post',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(PostFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(IconeComContador, {\n      icone: iconeCurtida,\n      onClickIcone: this.onClickCurtida,\n      valorContador: this.state.numeroCurtidas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(IconeComContador, {\n      icone: iconeComentario,\n      onClickIcone: this.onClickComentario,\n      valorContador: this.state.numeroComentarios,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), caixaDeComentario);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/noh_a/Desktop/Labenu/Noh-Ah-Jeong/semana9/insta-lab-classe/src/components/Post/Post.js"],"names":["React","PostContainer","PostHeader","UserPhoto","PostPhoto","PostFooter","CommentContainer","IconeComContador","SecaoComentario","Post","Component","state","curtido","numeroCurtidas","comentando","numeroComentarios","comentarios","onClickCurtida","setState","onClickComentario","enviarComentario","comentario","listaDeComentarios","render","iconeCurtida","iconeCoracaoPreto","iconeCoracaoBranco","caixaDeComentario","map","props","fotoUsuario","nomeUsuario","fotoPost","iconeComentario"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles'\n\nimport IconeComContador from '../IconeComContador/IconeComContador'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\n\nclass Post extends React.Component {\n  state = {\n    curtido: false, // usado para a lógica de mudança de cor do coração e o aumento/diminuição do número de curtidas\n    numeroCurtidas: 0, // número de curtidas do post. Varia entre 0 e 1. \n    comentando: false, // usado para a lógica de abrir ou fechar a caixa de comentário\n    numeroComentarios: 0, // número de comentários do post.\n    comentarios: [], // responsável por guardar a lista de comentários feitos no post\n  }\n\n  onClickCurtida = () => {\n    \n    // verifica se, no estado, cutido é true ou false\n    if (this.state.curtido) {\n\n      // se for true, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas - 1\n      })\n    } else {\n\n      // se for false, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas + 1\n      })\n    }\n  }\n\n  // método chamado quando o ícone de comentário é clicado. O método apenas muda o valor de \n  // comentando no estado, de true para false ou de false para true.\n  onClickComentario = () => {\n    this.setState({\n      comentando: !this.state.comentando\n    })\n  }\n\n  // recebe como parâmetro um comentário, que vem do componente SecaoComentario. Com esse parâmetro, o método\n  // o inclui na lista de comentários do estado, com a desestruturacao e o this.setState. \n  enviarComentario = (comentario) => {\n    const listaDeComentarios = [...this.state.comentarios, comentario]\n\n    this.setState({\n      comentarios: listaDeComentarios,\n      comentando: false,\n      numeroComentarios: this.state.numeroComentarios + 1\n    })\n  }\n\n  render() {\n    // De acordo com a propriedade curtido do estado, o valor muda entre  iconeCoracaoPreto e o iconeCoracaoBranco, \n    // que estão sendo importados nas linhas 7 e 8, respectivamente. \n    const iconeCurtida = this.state.curtido ? (iconeCoracaoPreto) : (iconeCoracaoBranco)\n\n    // expressão condicional que, de acordo com o valor de comentando no estado, renderiza o componente\n    // SecaoComentario ou o CommentContainer. Esta expressão está sendo chamada no JSX na linha 104\n    const caixaDeComentario = this.state.comentando ? (\n      // Componente com o input e botão de enviar novo comentario. Import dele na linha 5.\n      <SecaoComentario enviarComentario={this.enviarComentario}/>\n    ) : (\n      // Funcao map sendo feita na propriedade comentarios do estado. Ou seja, está sendo pego todos os\n      // comentários do estado para serem renderizados na tela, dentro do componente CommentContainer \n      this.state.comentarios.map(comentario => {\n        return (\n          <CommentContainer>\n            <p>{comentario}</p>\n          </CommentContainer>\n        )\n      })\n    )\n\n    return <PostContainer>\n      <PostHeader>\n        <UserPhoto src={this.props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{this.props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={this.props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={this.onClickCurtida}\n          valorContador={this.state.numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={this.onClickComentario}\n          valorContador={this.state.numeroComentarios}\n        />\n\n      </PostFooter>\n      {caixaDeComentario}\n    </PostContainer>\n  }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}